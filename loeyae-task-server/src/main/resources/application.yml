server:
  port: ${PORT:9906}

spring:
  profiles:
    active: local
  application:
    name: loeyae-task-server
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:service_task}?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=UTC
    username: ${DB_USER:doctrine}
    password: ${DB_PWD:doctrine}
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      auto-commit: true
      idle-timeout: 30000
      pool-name: LcHikariCP
      # 池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 等待来自池的连接的最大毫秒数,小于30秒重置为30秒
      connection-timeout: 30000
  # Flyway configuration
  flyway:
    baselineOnMigrate: true
    ignore-missing-migrations: true
    locations: classpath:db/migration
  # 出现错误时, 直接抛出异常
  mvc:
    throw-exception-if-no-handler-found: true
  # 取消默认的一些映射处理 也就是404 405 500等错误 也直接抛出异常
  resources:
    add-mappings: false

  quartz:
    #相关属性配置
    properties:
      org:
        quartz:
          scheduler:
            instanceName: clusteredScheduler
            instanceId: AUTO
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: QRTZ_
            isClustered: true
            clusterCheckinInterval: 10000
            useProperties: false
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
    job-store-type: jdbc
  #    jdbc:
  #      initialize-schema: always

# Mybatis-Plus Config
mybatis-plus:
  # 扫描 mapper.xml
  mapper-locations: classpath:/mapper/*/*Mapper.xml
  # 枚举类扫描
  typeEnumsPackage: com.loeyae.cloud.*.enums

# feign configuration
feign:
  hystrix:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 10000
        readTimeout: 10000
#  compression:
#    request:
#      enabled: true
#    response:
#      enabled: true

# 熔断器设置 HystrixCommandProperties
hystrix:
  threadpool:
    default:
      # 并发执行的最大线程数，默认10
      coreSize: 10
      maximumSize: 100
      allowMaximumSizeToDivergeFromCoreSize: true
      # BlockingQueue的最大队列数
      maxQueueSize: 100
      # 即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
      queueSizeRejectionThreshold: 100
  command:
    default:
      # 是否开启通过请求缓存提供去重复数据功能。 默认为true
      requestCache:
        enabled: false
      execution:
        timeout:
          enabled: true
        isolation:
          strategy: SEMAPHORE
          semaphore:
            maxConcurrentRequests: 1000
          thread:
            #设置超时熔断时间 15秒
            timeoutInMilliseconds: 30000
      # 短路限制数量
      circuitBreaker:
        requestVolumeThreshold: 1000
      fallback:
        isolation:
          semaphore:
            maxConcurrentRequests: 1000

##开启所有端点
management:
  endpoint:
    pause:
      enabled: true
    restart:
      enabled: true
    refresh:
      enabled: true
    resume:
      enabled: true
    health:
      show-details: always
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'


logging:
  level:
    org.springframework.web.reactive: WARN

async:
  executor:
    thread:
      core_pool_size: 5
      max_pool_size: 8
      queue_capacity: 2
      name:
        prefix: "async-service-"
      keep_alive_seconds: 100